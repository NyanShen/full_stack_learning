@import url('./btn.scss');
@import "./variables.scss";

.app-search-container {
	padding: 15px 15px 0 15px;
	border-radius: 5px;
	background-color: #fff;
	box-shadow: 1px 1px 3px rgba(0,0,0,.2);
}
.app-content-container {
	padding: 15px;
	border-radius: 5px;
	background-color: #fff;
	box-shadow: 1px 1px 3px rgba(0,0,0,.2);
}

.mgb10 {
	margin-bottom: 10px;
}

.mgb20 {
	margin-bottom: 20px;
}

.mgb30 {
	margin-bottom: 30px;
}

/* flex */
.flex-cc {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flex-csb {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.flex-cse {
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.flx{
  display: flex;
}

.flex-rc {
  display: flex;
  flex-flow: row;
  align-items: center;
}

.flex-column-cc {
  display: flex;
  flex-direction: column;
  justify-content: center;
  text-align: center;
  align-items: center;
}

.flex-1 {
  flex:1;
}

.one-cut-txt {
  /*强制文字在一行文本框内*/
  white-space: nowrap;
  /*溢出部分文字隐藏*/
  overflow: hidden;
  /*溢出部分省略号处理*/
  text-overflow: ellipsis;
}

/* 清除浮动 */
.clearfix::after {
  content: "";
  display: block;
  height: 0px;
  clear: both;
  overflow: hidden;
}

/* fade-transform */
.fade-transform-leave-active,
.fade-transform-enter-active {
  transition: all 0.2s;
}

.fade-transform-enter-from {
  opacity: 0;
  transform: translateX(-30px);
  transition: all 0.2s;
}

.fade-transform-leave-to {
  opacity: 0;
  transform: translateX(30px);
  transition: all 0.2s;
}

/* Breadcrumb */
.breadcrumb-enter-active,
.breadcrumb-leave-active {
  transition: all 0.2s ease;
}

.breadcrumb-enter-from,
.breadcrumb-leave-active {
  opacity: 0;
  transform: translateX(10px);
}

.breadcrumb-leave-active {
  position: absolute;
  z-index: -1;
}

/* scroll bar */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
  background-color: white;
}

::-webkit-scrollbar-thumb {
  box-shadow: inset 0 0 0px white;
  -webkit-box-shadow: inset 0 0 0px white;
  background-color: #dddee0;
  border-radius: 20px;
}

.content-box {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100%;
  font-size: 23px;
  font-weight: bold;
  color: rgb(88, 88, 88);
  line-height: 100px;
  min-height: 400px;
}


@each $key, $value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}

@each $key, $value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}

@each $typeKey, $type in $spacing-types {
  // m-s, p-s
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size;
    }
  }
  // mx-s, my-s, px-s, py-s
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $spacing-base-size;
      #{$type}-right: $size * $spacing-base-size;
    }
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size;
    }
  }
  // mt-s, mr-s, mb-s, ml-s, mx-s, my-s, px-s, py-s
  @each $directionKey, $direction in $spacing-directions {
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size;
      }
    }
  }
}